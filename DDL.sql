-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;
-- Eliminar tablas (orden correcto por dependencias)

DROP TABLE IF EXISTS public.usuarios_dispositivos CASCADE;
DROP TABLE IF EXISTS public.usuario_cliente CASCADE;
DROP TABLE IF EXISTS public.check_list CASCADE;
DROP TABLE IF EXISTS public.insumos CASCADE;
DROP TABLE IF EXISTS public.hallazgos CASCADE;
DROP TABLE IF EXISTS public.dispositivos_plagas CASCADE;
DROP TABLE IF EXISTS public.dispositivo_movil CASCADE;
DROP TABLE IF EXISTS public.clientes_hallazgos CASCADE;
DROP TABLE IF EXISTS public.areascliente CASCADE;
DROP TABLE IF EXISTS public.usuarios CASCADE;
DROP TABLE IF EXISTS public.roles CASCADE;
DROP TABLE IF EXISTS public.autorizacion CASCADE;
DROP TABLE IF EXISTS public.clientes CASCADE;
DROP TABLE IF EXISTS public.servicio CASCADE;
DROP TABLE IF EXISTS public.diccionario_hallazgos CASCADE;
DROP TABLE IF EXISTS public.categoria_diccionario CASCADE;
DROP TABLE IF EXISTS public.categoria CASCADE;
DROP TABLE IF EXISTS public.dato_categoria CASCADE;
DROP TABLE IF EXISTS public.categoria_contexto CASCADE;
DROP TABLE IF EXISTS public.hallazgos_datoCategoria CASCADE;

-- Crear secuencias necesarias
CREATE SEQUENCE IF NOT EXISTS areascliente_id_seq;
CREATE SEQUENCE IF NOT EXISTS autorizacion_id_seq;
CREATE SEQUENCE IF NOT EXISTS categorias_diccionario_id_seq;
CREATE SEQUENCE IF NOT EXISTS dato_categoria_id_seq;
CREATE SEQUENCE IF NOT EXISTS categoria_contexto_id_seq;
CREATE SEQUENCE IF NOT EXISTS dispositivo_movil_id_seq;
CREATE SEQUENCE IF NOT EXISTS hallazgos_id_seq;
CREATE SEQUENCE IF NOT EXISTS insumos_id_seq;
CREATE SEQUENCE IF NOT EXISTS roles_id_seq;
CREATE SEQUENCE IF NOT EXISTS servicio_id_seq;
CREATE SEQUENCE IF NOT EXISTS usuario_cliente_id_seq;
CREATE SEQUENCE IF NOT EXISTS usuarios_id_seq;
CREATE SEQUENCE IF NOT EXISTS check_list_id_seq;

DROP TABLE IF EXISTS public.areascliente;

CREATE TABLE IF NOT EXISTS public.areascliente
(
    id integer NOT NULL DEFAULT nextval('areascliente_id_seq'::regclass),
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    estado character varying(255) COLLATE pg_catalog."default" NOT NULL,
    cliente_id character varying(10) COLLATE pg_catalog."default" NOT NULL,
    url_area text COLLATE pg_catalog."default",
    CONSTRAINT areascliente_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.autorizacion;

CREATE TABLE IF NOT EXISTS public.autorizacion
(
    id integer NOT NULL DEFAULT nextval('autorizacion_id_seq'::regclass),
    url_firma text COLLATE pg_catalog."default" NOT NULL,
    fecha timestamp without time zone,
    nombre character varying(50) COLLATE pg_catalog."default",
    telefono character varying(50) COLLATE pg_catalog."default",
    observaciones character varying(250) COLLATE pg_catalog."default",
    CONSTRAINT autorizacion_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.categoria;

CREATE TABLE IF NOT EXISTS public.categoria
(
    id integer NOT NULL DEFAULT nextval('categorias_diccionario_id_seq'::regclass),
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT categorias_diccionario_pkey PRIMARY KEY (id),
    CONSTRAINT categorias_diccionario_nombre_key UNIQUE (nombre)
);

DROP TABLE IF EXISTS public.categoria_contexto;

CREATE TABLE IF NOT EXISTS public.categoria_contexto
(
    id integer NOT NULL DEFAULT nextval('categoria_contexto_id_seq'::regclass),
    categoria_id integer NOT NULL,
    aplica_a character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT categoria_contexto_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.check_list;

CREATE TABLE IF NOT EXISTS public.check_list
(
    id integer NOT NULL DEFAULT nextval('check_list_id_seq'::regclass),
    item character varying COLLATE pg_catalog."default",
    estado character varying COLLATE pg_catalog."default" NOT NULL,
    clientes_id character varying(10) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT check_list_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.clientes;

CREATE TABLE IF NOT EXISTS public.clientes
(
    id character varying(10) COLLATE pg_catalog."default" NOT NULL,
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    industria character varying(255) COLLATE pg_catalog."default" NOT NULL,
    fecha_registro timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    tiemporeingreso integer,
    servicio_id integer NOT NULL,
    CONSTRAINT clientes_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.clientes_hallazgos;

CREATE TABLE IF NOT EXISTS public.clientes_hallazgos
(
    cliente_id character varying(10) COLLATE pg_catalog."default" NOT NULL,
    dato_categoria_id integer NOT NULL,
    fecha_hallazgo timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    hallazgo_id integer NOT NULL,
    CONSTRAINT clientes_hallazgos_pkey PRIMARY KEY (cliente_id, hallazgo_id)
);

DROP TABLE IF EXISTS public.dato_categoria;

CREATE TABLE IF NOT EXISTS public.dato_categoria
(
    id integer NOT NULL DEFAULT nextval('dato_categoria_id_seq'::regclass),
    valor character varying(255) COLLATE pg_catalog."default" NOT NULL,
    categoria_id integer,
    hallazgo_id character varying COLLATE pg_catalog."default",
    CONSTRAINT dato_categoria_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.dispositivo_movil;

CREATE TABLE IF NOT EXISTS public.dispositivo_movil
(
    id integer NOT NULL DEFAULT nextval('dispositivo_movil_id_seq'::regclass),
    modelo character varying(50) COLLATE pg_catalog."default",
    sistema_operativo character varying(100) COLLATE pg_catalog."default",
    fecha_registro timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "IMEI" character varying COLLATE pg_catalog."default",
    CONSTRAINT dispositivo_movil_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.dispositivos_plagas;

CREATE TABLE IF NOT EXISTS public.dispositivos_plagas
(
    id character varying(10) COLLATE pg_catalog."default" NOT NULL,
    areacliente_id integer NOT NULL,
    diccionario_hallazgos_id integer NOT NULL,
    codigo character varying COLLATE pg_catalog."default" NOT NULL,
    estado character varying COLLATE pg_catalog."default" NOT NULL,
    clase_dispositivo_plaga_id character varying COLLATE pg_catalog."default",
    url_dispositivo text COLLATE pg_catalog."default",
    CONSTRAINT dispositivos_plagas_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.hallazgos;

CREATE TABLE IF NOT EXISTS public.hallazgos
(
    id integer NOT NULL DEFAULT nextval('hallazgos_id_seq'::regclass),
    areacliente_id integer NOT NULL,
    "dispositivoP_id" character varying COLLATE pg_catalog."default",
    url_hallazgo text COLLATE pg_catalog."default",
    observaciones text COLLATE pg_catalog."default",
    fecha_registro timestamp without time zone,
    CONSTRAINT hallazgos_pkey PRIMARY KEY (id),
    CONSTRAINT hallazgos_areacliente_id_key UNIQUE (areacliente_id)
);

DROP TABLE IF EXISTS public."hallazgos_datoCategoria";

CREATE TABLE IF NOT EXISTS public."hallazgos_datoCategoria"
(
    hallazgo_id integer NOT NULL,
    dato_categoria_id integer NOT NULL,
    CONSTRAINT "hallazgo_datoCategoria_pkey" PRIMARY KEY (hallazgo_id, dato_categoria_id)
);

DROP TABLE IF EXISTS public.insumos;

CREATE TABLE IF NOT EXISTS public.insumos
(
    id integer NOT NULL DEFAULT nextval('insumos_id_seq'::regclass),
    areacliente_id integer NOT NULL,
    nombre character varying COLLATE pg_catalog."default",
    unidad_medida character varying COLLATE pg_catalog."default",
    cantidad integer,
    CONSTRAINT insumos_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.roles;

CREATE TABLE IF NOT EXISTS public.roles
(
    id integer NOT NULL DEFAULT nextval('roles_id_seq'::regclass),
    nombre character varying(50) COLLATE pg_catalog."default" NOT NULL,
    descripcion character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT roles_pkey PRIMARY KEY (id),
    CONSTRAINT roles_nombre_key UNIQUE (nombre)
);

DROP TABLE IF EXISTS public.servicio;

CREATE TABLE IF NOT EXISTS public.servicio
(
    id integer NOT NULL DEFAULT nextval('servicio_id_seq'::regclass),
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT servicio_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public.usuario_cliente;

CREATE TABLE IF NOT EXISTS public.usuario_cliente
(
    id integer NOT NULL DEFAULT nextval('usuario_cliente_id_seq'::regclass),
    cliente_id character varying(10) COLLATE pg_catalog."default" NOT NULL,
    estado character varying COLLATE pg_catalog."default" DEFAULT true,
    usuario_id integer NOT NULL,
    fecha timestamp without time zone,
    autorizacion_id integer,
    CONSTRAINT usuario_cliente_pkey PRIMARY KEY (id),
    CONSTRAINT usuario_cliente_fecha_unique UNIQUE (fecha)
);

DROP TABLE IF EXISTS public.usuarios;

CREATE TABLE IF NOT EXISTS public.usuarios
(
    id integer NOT NULL DEFAULT nextval('usuarios_id_seq'::regclass),
    identificacion_numero integer,
    nombre_usuario character varying(50) COLLATE pg_catalog."default" NOT NULL,
    contrasena_hash character varying(255) COLLATE pg_catalog."default" NOT NULL,
    correo_electronico character varying(255) COLLATE pg_catalog."default",
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    estado boolean DEFAULT true,
    fecha_ultimo_login timestamp without time zone,
    rol_id integer,
    CONSTRAINT usuarios_pkey PRIMARY KEY (id),
    CONSTRAINT usuarios_correo_electronico_key UNIQUE (correo_electronico),
    CONSTRAINT usuarios_nombre_usuario_key UNIQUE (nombre_usuario)
);

DROP TABLE IF EXISTS public.usuarios_dispositivos;

CREATE TABLE IF NOT EXISTS public.usuarios_dispositivos
(
    usuario_id integer NOT NULL,
    dispositivo_movil_id integer NOT NULL,
    fecha_login timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    latitud character varying(50) COLLATE pg_catalog."default",
    longitud character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT usuarios_dispositivos_pkey PRIMARY KEY (usuario_id, dispositivo_movil_id, fecha_login)
);

ALTER TABLE IF EXISTS public.areascliente
    ADD CONSTRAINT areascliente_cliente_id_fkey FOREIGN KEY (cliente_id)
    REFERENCES public.clientes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.categoria_contexto
    ADD CONSTRAINT categoria_contexto_categoria_id FOREIGN KEY (categoria_id)
    REFERENCES public.categoria (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.check_list
    ADD CONSTRAINT check_list_clientes_id_fkey FOREIGN KEY (clientes_id)
    REFERENCES public.clientes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.clientes
    ADD CONSTRAINT clientes_servicio_id_fkey FOREIGN KEY (servicio_id)
    REFERENCES public.servicio (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.clientes_hallazgos
    ADD CONSTRAINT clientes_hallazgos_cliente_id_fkey FOREIGN KEY (cliente_id)
    REFERENCES public.clientes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.dato_categoria
    ADD CONSTRAINT dato_categoria_categoria_id_fkey FOREIGN KEY (categoria_id)
    REFERENCES public.categoria (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.dispositivos_plagas
    ADD CONSTRAINT dispositivos_plagas_areacliente_id_fkey FOREIGN KEY (areacliente_id)
    REFERENCES public.areascliente (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.dispositivos_plagas
    ADD CONSTRAINT dispositivos_plagas_diccionario_hallazgos_id_fkey FOREIGN KEY (diccionario_hallazgos_id)
    REFERENCES public.dato_categoria (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.hallazgos
    ADD CONSTRAINT hallazgos_areacliente_id_fkey FOREIGN KEY (areacliente_id)
    REFERENCES public.areascliente (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS hallazgos_areacliente_id_key
    ON public.hallazgos(areacliente_id);


ALTER TABLE IF EXISTS public.hallazgos
    ADD CONSTRAINT "hallazgos_dispositivoP_id_fkey" FOREIGN KEY ("dispositivoP_id")
    REFERENCES public.dispositivos_plagas (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."hallazgos_datoCategoria"
    ADD CONSTRAINT "hallazgos_datoCategoria_dato_categoria_id_fkey" FOREIGN KEY (dato_categoria_id)
    REFERENCES public.dato_categoria (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."hallazgos_datoCategoria"
    ADD CONSTRAINT "hallazgos_datoCategoria_hallazgo_id_fkey" FOREIGN KEY (hallazgo_id)
    REFERENCES public.hallazgos (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.insumos
    ADD CONSTRAINT insumos_areacliente_id_fkey FOREIGN KEY (areacliente_id)
    REFERENCES public.areascliente (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.usuario_cliente
    ADD CONSTRAINT usuario_cliente_autorizacion_id_fkey FOREIGN KEY (autorizacion_id)
    REFERENCES public.autorizacion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.usuario_cliente
    ADD CONSTRAINT usuario_cliente_cliente_id_fkey FOREIGN KEY (cliente_id)
    REFERENCES public.clientes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.usuario_cliente
    ADD CONSTRAINT usuario_cliente_usuario_id_fkey FOREIGN KEY (usuario_id)
    REFERENCES public.usuarios (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.usuarios
    ADD CONSTRAINT usuarios_rol_id_fkey FOREIGN KEY (rol_id)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.usuarios_dispositivos
    ADD CONSTRAINT usuarios_dispositivos_dispositivo_movil_id_fkey FOREIGN KEY (dispositivo_movil_id)
    REFERENCES public.dispositivo_movil (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.usuarios_dispositivos
    ADD CONSTRAINT usuarios_dispositivos_usuario_id_fkey FOREIGN KEY (usuario_id)
    REFERENCES public.usuarios (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
    
ALTER TABLE categoria_contexto
ADD CONSTRAINT chk_aplica_a CHECK (aplica_a IN ('Dispositivo', 'Área', 'Ambos'));

END;